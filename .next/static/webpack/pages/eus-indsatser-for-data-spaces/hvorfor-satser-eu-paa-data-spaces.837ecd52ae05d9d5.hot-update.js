"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/eus-indsatser-for-data-spaces/hvorfor-satser-eu-paa-data-spaces",{

/***/ "./src/pages/eus-indsatser-for-data-spaces/hvorfor-satser-eu-paa-data-spaces.md":
/*!**************************************************************************************!*\
  !*** ./src/pages/eus-indsatser-for-data-spaces/hvorfor-satser-eu-paa-data-spaces.md ***!
  \**************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; },\n/* harmony export */   \"default\": function() { return /* binding */ MarkdocComponent; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @markdoc/markdoc */ \"./node_modules/@markdoc/markdoc/dist/index.mjs\");\n/* harmony import */ var _Users_boetter_Documents_GitHub_data_spaces_rapport_node_modules_markdoc_next_js_src_runtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@markdoc/next.js/src/runtime.js */ \"./node_modules/@markdoc/next.js/src/runtime.js\");\n/* harmony import */ var _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_tags_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markdoc/tags.js */ \"./markdoc/tags.js\");\n/* harmony import */ var _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_nodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./markdoc/nodes.js */ \"./markdoc/nodes.js\");\n\n\n// renderers is imported separately so Markdoc isn't sent to the client\n\n\n/**\n * Schema is imported like this so end-user's code is compiled using build-in babel/webpack configs.\n * This enables typescript/ESnext support\n */ var config = {};\n\n\nvar functions = {};\nvar schema = (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\n    tags: _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_tags_js__WEBPACK_IMPORTED_MODULE_2__ ? _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_tags_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] || _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_tags_js__WEBPACK_IMPORTED_MODULE_2__ : {},\n    nodes: _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_nodes_js__WEBPACK_IMPORTED_MODULE_3__ ? _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_nodes_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] || _Users_boetter_Documents_GitHub_data_spaces_rapport_markdoc_nodes_js__WEBPACK_IMPORTED_MODULE_3__ : {},\n    functions: functions ? functions.default || functions : {}\n}, config ? config.default || config : {});\nvar components = (0,_Users_boetter_Documents_GitHub_data_spaces_rapport_node_modules_markdoc_next_js_src_runtime_js__WEBPACK_IMPORTED_MODULE_1__.getSchema)(schema).components;\nvar __N_SSG = true;\nfunction MarkdocComponent(props) {\n    // Only execute HMR code in development\n    return _markdoc_markdoc__WEBPACK_IMPORTED_MODULE_5__.renderers.react(props.markdoc.content, (react__WEBPACK_IMPORTED_MODULE_0___default()), {\n        components: (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({}, components, props.components)\n    });\n};\n_c = MarkdocComponent;\nvar _c;\n$RefreshReg$(_c, \"MarkdocComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/eus-indsatser-for-data-spaces/hvorfor-satser-eu-paa-data-spaces.md\n"));

/***/ })

});